{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./src/worker-script/browser/index.js","webpack:///./src/worker-script/index.js","webpack:///D:/joker_exp/new_test/node_modules/regenerator-runtime/runtime.js","webpack:///./src/worker-script/constants/defaultArgs.js","webpack:///./src/worker-script/browser/getCore.js","webpack:///./src/worker/browser/fs.js","webpack:///D:/joker_exp/new_test/node_modules/idb/build/esm/chunk.js","webpack:///D:/joker_exp/new_test/node_modules/idb/build/esm/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","g","this","Function","e","window","getCore","fs","global","addEventListener","data","worker","dispatchHandlers","obj","postMessage","setAdapter","defaultArgs","action","Module","adapter","ffmpeg","strList2ptr","strList","listPtr","_malloc","length","Uint32Array","BYTES_PER_ELEMENT","forEach","idx","strPtr","ptr","Uint8Array","setValue","charCodeAt","str2ptr","load","workerId","payload","options","corePath","res","Core","then","async","_Module","setLogger","message","type","progress","cwrap","resolve","syncfs","populate","ls","path","dirs","FS","readdir","run","args","_args","inputPath","outputPath","del","trim","split","writeFile","readFile","unlink","deleteFile","join","packet","send","status","reject","err","toString","_adapter","runtime","undefined","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","invoke","result","__await","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","iter","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","importScripts","openDB","getDB","getDataKeyAndMode","db","dummy","dataKey","filter","k","includes","put","timestamp","Date","delete","instanceOfAny","constructors","some","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","target","prop","receiver","IDBTransaction","objectStoreNames","objectStore","has","wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","apply","unwrap","storeNames","tx","set","sort","transformCachableValue","unlisten","removeEventListener","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","Proxy","IDBRequest","request","promise","success","catch","promisifyRequest","newValue","version","blocked","upgrade","blocking","indexedDB","open","openPromise","event","oldVersion","newVersion","deleteDB","deleteDatabase","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","storeName","store","index","shift","returnVal","oldTraps","callback"],"mappings":"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","file":"worker.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","const worker = require('../');\nconst getCore = require('./getCore');\nconst fs = require('../../worker/browser/fs');\n\nglobal.addEventListener('message', ({ data }) => {\n  worker.dispatchHandlers(data, (obj) => postMessage(obj));\n});\n\nworker.setAdapter({\n  getCore,\n  fs,\n});\n","require('regenerator-runtime/runtime');\nconst defaultArgs = require('./constants/defaultArgs');\n\nlet action = 'unknown';\nlet Module = null;\nlet adapter = null;\nlet ffmpeg = null;\n\nconst str2ptr = (s) => {\n  const ptr = Module._malloc((s.length + 1) * Uint8Array.BYTES_PER_ELEMENT);\n  for (let i = 0; i < s.length; i += 1) {\n    Module.setValue(ptr + i, s.charCodeAt(i), 'i8');\n  }\n  Module.setValue(ptr + s.length, 0, 'i8');\n  return ptr;\n};\n\nconst strList2ptr = (strList) => {\n  const listPtr = Module._malloc(strList.length * Uint32Array.BYTES_PER_ELEMENT);\n\n  strList.forEach((s, idx) => {\n    const strPtr = str2ptr(s);\n    Module.setValue(listPtr + (4 * idx), strPtr, 'i32');\n  });\n\n  return listPtr;\n};\n\nconst load = ({ workerId, payload: { options: { corePath } } }, res) => {\n  if (Module == null) {\n    const Core = adapter.getCore(corePath);\n    Core()\n      .then(async (_Module) => {\n        Module = _Module;\n        Module.setLogger((message, type) => {\n          res.progress({\n            workerId, action, type, message,\n          });\n        });\n        ffmpeg = Module.cwrap('ffmpeg', 'number', ['number', 'number']);\n        res.resolve({ message: 'Loaded ffmpeg-core' });\n      });\n  } else {\n    res.resolve({ message: 'Loaded ffmpeg-core' });\n  }\n};\n\nconst syncfs = async ({\n  payload: {\n    populate = false,\n  },\n}, res) => {\n  await Module.syncfs(populate);\n  res.resolve({ message: `Sync file system with populate=${populate}` });\n};\n\nconst ls = ({\n  payload: {\n    path,\n  },\n}, res) => {\n  const dirs = Module.FS.readdir(path);\n  res.resolve({ message: `List path ${path}`, dirs });\n};\n\nconst run = async ({\n  payload: {\n    args: _args,\n    options: { inputPath, outputPath, del },\n  },\n}, res) => {\n  const args = [...defaultArgs, ..._args.trim().split(' ')];\n  ffmpeg(args.length, strList2ptr(args));\n  await adapter.fs.writeFile(outputPath, Module.FS.readFile(outputPath));\n  Module.FS.unlink(outputPath);\n  if (del && typeof inputPath === 'string') {\n    await adapter.fs.deleteFile(inputPath);\n  }\n  res.resolve({ message: `Complete ${args.join(' ')}` });\n};\n\nexports.dispatchHandlers = (packet, send) => {\n  const res = (status, data) => {\n    send({\n      ...packet,\n      status,\n      data,\n    });\n  };\n  res.resolve = res.bind(this, 'resolve');\n  res.reject = res.bind(this, 'reject');\n  res.progress = res.bind(this, 'progress');\n\n  action = packet.action;\n  try {\n    ({\n      load,\n      ls,\n      syncfs,\n      run,\n    })[packet.action](packet, res);\n  } catch (err) {\n    /** Prepare exception to travel through postMessage */\n    res.reject(err.toString());\n  }\n  action = 'unknown';\n};\n\nexports.setAdapter = (_adapter) => {\n  adapter = _adapter;\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = [\n  './ffmpeg', // args[0] is always binary path\n  '-nostdin', // Disable interaction mode\n];\n","module.exports = (corePath) => {\n  if (typeof global.Module === 'undefined') {\n    global.importScripts(corePath);\n  }\n  return global.Module;\n};\n","const { openDB } = require('idb');\n\nconst getDB = () => openDB('/data', 21);\n\nconst getDataKeyAndMode = async (db) => {\n  const dummy = await db.get('FILE_DATA', '/data/.DUMMY');\n  const dataKey = Object.keys(dummy).filter((k) => !['mode', 'timestamp'].includes(k)).pop();\n  return { dataKey, mode: dummy.mode };\n};\n\nmodule.exports = {\n  readFile: async (path) => {\n    const db = await getDB();\n    const { dataKey } = await getDataKeyAndMode(db);\n    return (await db.get('FILE_DATA', `/data/${path}`))[dataKey];\n  },\n  writeFile: async (path, data) => {\n    const db = await getDB();\n    const { dataKey, mode } = await getDataKeyAndMode(db);\n    await db.put(\n      'FILE_DATA',\n      {\n        [dataKey]: data,\n        mode,\n        timestamp: new Date(),\n      },\n      `/data/${path}`,\n    );\n  },\n  deleteFile: async (path) => {\n    const db = await getDB();\n    await db.delete('FILE_DATA', `/data/${path}`);\n  },\n};\n","const instanceOfAny = (object, constructors) => constructors.some(c => object instanceof c);\n\nlet idbProxyableTypes;\r\nlet cursorAdvanceMethods;\r\n// This is a function to prevent it throwing up in node environments.\r\nfunction getIdbProxyableTypes() {\r\n    return (idbProxyableTypes ||\r\n        (idbProxyableTypes = [\r\n            IDBDatabase,\r\n            IDBObjectStore,\r\n            IDBIndex,\r\n            IDBCursor,\r\n            IDBTransaction,\r\n        ]));\r\n}\r\n// This is a function to prevent it throwing up in node environments.\r\nfunction getCursorAdvanceMethods() {\r\n    return (cursorAdvanceMethods ||\r\n        (cursorAdvanceMethods = [\r\n            IDBCursor.prototype.advance,\r\n            IDBCursor.prototype.continue,\r\n            IDBCursor.prototype.continuePrimaryKey,\r\n        ]));\r\n}\r\nconst cursorRequestMap = new WeakMap();\r\nconst transactionDoneMap = new WeakMap();\r\nconst transactionStoreNamesMap = new WeakMap();\r\nconst transformCache = new WeakMap();\r\nconst reverseTransformCache = new WeakMap();\r\nfunction promisifyRequest(request) {\r\n    const promise = new Promise((resolve, reject) => {\r\n        const unlisten = () => {\r\n            request.removeEventListener('success', success);\r\n            request.removeEventListener('error', error);\r\n        };\r\n        const success = () => {\r\n            resolve(wrap(request.result));\r\n            unlisten();\r\n        };\r\n        const error = () => {\r\n            reject(request.error);\r\n            unlisten();\r\n        };\r\n        request.addEventListener('success', success);\r\n        request.addEventListener('error', error);\r\n    });\r\n    promise\r\n        .then(value => {\r\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\r\n        // (see wrapFunction).\r\n        if (value instanceof IDBCursor) {\r\n            cursorRequestMap.set(value, request);\r\n        }\r\n        // Catching to avoid \"Uncaught Promise exceptions\"\r\n    })\r\n        .catch(() => { });\r\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\r\n    // is because we create many promises from a single IDBRequest.\r\n    reverseTransformCache.set(promise, request);\r\n    return promise;\r\n}\r\nfunction cacheDonePromiseForTransaction(tx) {\r\n    // Early bail if we've already created a done promise for this transaction.\r\n    if (transactionDoneMap.has(tx))\r\n        return;\r\n    const done = new Promise((resolve, reject) => {\r\n        const unlisten = () => {\r\n            tx.removeEventListener('complete', complete);\r\n            tx.removeEventListener('error', error);\r\n            tx.removeEventListener('abort', error);\r\n        };\r\n        const complete = () => {\r\n            resolve();\r\n            unlisten();\r\n        };\r\n        const error = () => {\r\n            reject(tx.error);\r\n            unlisten();\r\n        };\r\n        tx.addEventListener('complete', complete);\r\n        tx.addEventListener('error', error);\r\n        tx.addEventListener('abort', error);\r\n    });\r\n    // Cache it for later retrieval.\r\n    transactionDoneMap.set(tx, done);\r\n}\r\nlet idbProxyTraps = {\r\n    get(target, prop, receiver) {\r\n        if (target instanceof IDBTransaction) {\r\n            // Special handling for transaction.done.\r\n            if (prop === 'done')\r\n                return transactionDoneMap.get(target);\r\n            // Polyfill for objectStoreNames because of Edge.\r\n            if (prop === 'objectStoreNames') {\r\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\r\n            }\r\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\r\n            if (prop === 'store') {\r\n                return receiver.objectStoreNames[1]\r\n                    ? undefined\r\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\r\n            }\r\n        }\r\n        // Else transform whatever we get back.\r\n        return wrap(target[prop]);\r\n    },\r\n    has(target, prop) {\r\n        if (target instanceof IDBTransaction &&\r\n            (prop === 'done' || prop === 'store')) {\r\n            return true;\r\n        }\r\n        return prop in target;\r\n    },\r\n};\r\nfunction addTraps(callback) {\r\n    idbProxyTraps = callback(idbProxyTraps);\r\n}\r\nfunction wrapFunction(func) {\r\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\r\n    // only create one new func per func.\r\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\r\n    if (func === IDBDatabase.prototype.transaction &&\r\n        !('objectStoreNames' in IDBTransaction.prototype)) {\r\n        return function (storeNames, ...args) {\r\n            const tx = func.call(unwrap(this), storeNames, ...args);\r\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\r\n            return wrap(tx);\r\n        };\r\n    }\r\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\r\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\r\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\r\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\r\n    // undefined if the end of the cursor has been reached.\r\n    if (getCursorAdvanceMethods().includes(func)) {\r\n        return function (...args) {\r\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\r\n            // the original object.\r\n            func.apply(unwrap(this), args);\r\n            return wrap(cursorRequestMap.get(this));\r\n        };\r\n    }\r\n    return function (...args) {\r\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\r\n        // the original object.\r\n        return wrap(func.apply(unwrap(this), args));\r\n    };\r\n}\r\nfunction transformCachableValue(value) {\r\n    if (typeof value === 'function')\r\n        return wrapFunction(value);\r\n    // This doesn't return, it just creates a 'done' promise for the transaction,\r\n    // which is later returned for transaction.done (see idbObjectHandler).\r\n    if (value instanceof IDBTransaction)\r\n        cacheDonePromiseForTransaction(value);\r\n    if (instanceOfAny(value, getIdbProxyableTypes()))\r\n        return new Proxy(value, idbProxyTraps);\r\n    // Return the same value back if we're not going to transform it.\r\n    return value;\r\n}\r\nfunction wrap(value) {\r\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\r\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\r\n    if (value instanceof IDBRequest)\r\n        return promisifyRequest(value);\r\n    // If we've already transformed this value before, reuse the transformed value.\r\n    // This is faster, but it also provides object equality.\r\n    if (transformCache.has(value))\r\n        return transformCache.get(value);\r\n    const newValue = transformCachableValue(value);\r\n    // Not all types are transformed.\r\n    // These may be primitive types, so they can't be WeakMap keys.\r\n    if (newValue !== value) {\r\n        transformCache.set(value, newValue);\r\n        reverseTransformCache.set(newValue, value);\r\n    }\r\n    return newValue;\r\n}\r\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { wrap as a, addTraps as b, instanceOfAny as c, reverseTransformCache as d, unwrap as e };\n","import { a as wrap, b as addTraps } from './chunk.js';\nexport { e as unwrap, a as wrap } from './chunk.js';\n\n/**\r\n * Open a database.\r\n *\r\n * @param name Name of the database.\r\n * @param version Schema version.\r\n * @param callbacks Additional callbacks.\r\n */\r\nfunction openDB(name, version, { blocked, upgrade, blocking } = {}) {\r\n    const request = indexedDB.open(name, version);\r\n    const openPromise = wrap(request);\r\n    if (upgrade) {\r\n        request.addEventListener('upgradeneeded', event => {\r\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\r\n        });\r\n    }\r\n    if (blocked)\r\n        request.addEventListener('blocked', () => blocked());\r\n    if (blocking) {\r\n        openPromise.then(db => db.addEventListener('versionchange', blocking)).catch(() => { });\r\n    }\r\n    return openPromise;\r\n}\r\n/**\r\n * Delete a database.\r\n *\r\n * @param name Name of the database.\r\n */\r\nfunction deleteDB(name, { blocked } = {}) {\r\n    const request = indexedDB.deleteDatabase(name);\r\n    if (blocked)\r\n        request.addEventListener('blocked', () => blocked());\r\n    return wrap(request).then(() => undefined);\r\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\r\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\r\nconst cachedMethods = new Map();\r\nfunction getMethod(target, prop) {\r\n    if (!(target instanceof IDBDatabase &&\r\n        !(prop in target) &&\r\n        typeof prop === 'string')) {\r\n        return;\r\n    }\r\n    if (cachedMethods.get(prop))\r\n        return cachedMethods.get(prop);\r\n    const targetFuncName = prop.replace(/FromIndex$/, '');\r\n    const useIndex = prop !== targetFuncName;\r\n    const isWrite = writeMethods.includes(targetFuncName);\r\n    if (\r\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\r\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\r\n        !(isWrite || readMethods.includes(targetFuncName))) {\r\n        return;\r\n    }\r\n    const method = async function (storeName, ...args) {\r\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\r\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\r\n        let target = tx.store;\r\n        if (useIndex)\r\n            target = target.index(args.shift());\r\n        const returnVal = target[targetFuncName](...args);\r\n        if (isWrite)\r\n            await tx.done;\r\n        return returnVal;\r\n    };\r\n    cachedMethods.set(prop, method);\r\n    return method;\r\n}\r\naddTraps(oldTraps => ({\r\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\r\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\r\n}));\n\nexport { openDB, deleteDB };\n"],"sourceRoot":""}